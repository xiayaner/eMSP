name: CI/CD to Aliyun ECS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: emsp/account-card-service
  DOCKER_TAG: ${{ github.sha }}
  SSH_HOST: ${{ secrets.ALIYUN_ECS_IP }}
  SSH_USER: ${{ secrets.ALIYUN_ECS_USER }}
  SSH_PORT: ${{ secrets.ALIYUN_ECS_PORT || 22 }}
  APP_PORT: 8080

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Run tests
      run: mvn test
      env:
        DB_HOST: localhost
        DB_USER: root
        DB_PASSWORD: password
        DB_NAME: emsp_db

    - name: Build Docker image
      run: docker build -t $DOCKER_IMAGE:$DOCKER_TAG .

    - name: Push to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push $DOCKER_IMAGE:$DOCKER_TAG

  deploy-to-aliyun:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to Aliyun ECS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USER }}
        key: ${{ secrets.ALIYUN_ECS_SSH_KEY }}
        port: ${{ env.SSH_PORT }}
        script: |
          #!/bin/bash
          # 1. 拉取最新镜像
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull $DOCKER_IMAGE:$DOCKER_TAG
          
          # 2. 停止并删除旧容器
          docker stop emsp-service || true
          docker rm emsp-service || true
          
          # 3. 运行新容器
          docker run -d \
            --name emsp-service \
            -p $APP_PORT:8080 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --restart=always \
            $DOCKER_IMAGE:$DOCKER_TAG
          
          # 4. 清理旧镜像
          docker image prune -af
          
          # 5. 检查容器状态
          sleep 10
          docker ps -a
          curl -I http://localhost:$APP_PORT/actuator/health
          
          # 6. 发送部署通知
          echo "Deployment completed successfully!"
